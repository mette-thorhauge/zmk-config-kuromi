/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5               &kp N6            &kp N7   &kp N8       &kp N9       &kp N0      &kp MINUS  &kp EQUAL         &kp BSPC        
                &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T                &kp Y             &kp U    &kp I        &kp O        &kp P       &kp LBKT   &kp RBKT     &kp NUBS   &kp DEL
                &mo 2       &kp A       &kp S       &kp D       &kp F       &kp G                &kp H             &kp J    &kp K        &kp L        &kp SEMI    &kp SQT    &kp ENTER    &kp ENTER  &mmv MOVE_DOWN
                &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B                &kp N             &kp M    &kp COMMA    &kp DOT      &kp SLASH         &kp RSHFT         &kp UP     &kp G  
                &kp LCTRL   &kp LGUI    &mo 3       &mo 1       &kp LALT    &kp SPACE        &kp SPACE     &mt RALT BSPC    &kp RALT     &mo 1        &kp G       &kp G      &kp LEFT     &kp DOWN   &kp RIGHT
            >;

             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        fn_layer {
            bindings = <
                &trans     &kp F1   &kp F2    &kp F3    &kp F4    &kp F5            &kp F6     &kp F7     &kp F8     &kp F9     &kp F10      &kp F11     &kp F12          &kp F12        
                &trans     &trans   &trans    &trans    &trans    &trans            &trans     &trans     &trans     &trans     &trans       &trans      &trans       &trans  &trans
                &trans     &trans   &trans    &trans    &trans    &trans            &trans     &trans     &trans     &trans     &trans       &trans      &trans       &trans  &trans
                &trans     &trans   &trans    &trans    &trans    &trans            &trans     &trans     &trans     &trans             &trans           &trans       &trans  &trans   
                &trans     &trans   &trans    &trans    &trans    &trans            &trans     &trans     &trans     &trans     &trans       &trans      &trans       &trans  &trans 
            >;
        };

        Mouse_layer {
            bindings = <
                &trans     &trans   &trans    &trans   &trans   &trans          &none           &none           &none            &none             &none      &none      &none       &none                   
                &trans     &trans   &trans    &trans   &trans   &trans          &msc SCRL_UP    &none           &mmv MOVE_UP     &none             &none      &none      &none  &none    &none
                &trans     &trans   &trans    &trans   &trans   &trans          &msc SCRL_DOWN	&mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &mkp RCLK  &none      &none  &none    &none
                &trans     &trans   &trans    &trans   &trans   &trans          &none           &none           &none            &none             &none          &none         &none    &none
                &trans     &trans   &trans    &trans   &trans   &trans          &mkp LCLK       &none           &none            &none             &none      &none      &none  &none    &none
            >;
        };

        BT_layer {
            bindings = <
                &trans        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &trans         &trans   &trans   &trans   &trans   &trans   &trans   &trans        &trans        
                &trans        &trans         &trans         &trans         &trans         &trans         &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans     &trans
                &out OUT_USB  &out OUT_BLE   &trans         &trans         &trans         &trans         &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans     &trans
                &bt BT_CLR    &trans         &trans         &trans         &trans         &trans         &trans   &trans   &trans   &trans   &trans         &trans      &trans     &trans  
                &trans        &trans         &trans         &trans         &trans         &trans         &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans     &trans
            >;
        };
    };
};
